apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: ska-oso-ptt-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      dnsPolicy: ClusterFirst
      dnsConfig:
        searches:
          - ska-oso-ptt-services.svc.cluster.local
          - svc.cluster.local
          - cluster.local
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:3.4
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
            - name: KAFKA_LISTENERS
              value: "INTERNAL://:9092,EXTERNAL://:29092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka-service:9092,EXTERNAL://kafka-service:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          ports:
            - containerPort: 9092
            - containerPort: 29092
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: ska-oso-ptt-services
spec:
  selector:
    app: kafka
  ports:
    - name: kafka-internal
      port: 9092
      targetPort: 9092
    - name: kafka-external
      port: 29092
      targetPort: 29092
