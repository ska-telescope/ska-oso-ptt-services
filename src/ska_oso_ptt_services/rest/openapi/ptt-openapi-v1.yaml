openapi: 3.0.0
info:
  title: Project Tracking Tool API
  description: 'This OpenAPI document defines the API for the Project Tracking Tool (PTT) REST service'
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 1.0.0
servers:
- url: /ska-oso-ptt-services/ptt/api/v1
paths:
  /sbds:
    get:
      summary: Get SBDefinition filter by the query parameter
      description: |
        Retrieves the SBDefinitions which match the query parameters.
        Currently only a single query field is permitted, eg user, entity_id or created_on - 
        extra parameters passed to the request will be ignored, with an order of 
        precedence of user > created_on > modified_on. Also requests without
        parameters will return an error rather than returning all objects. This behaviour will
        change in the future..
      operationId: ska_oso_ptt_services.rest.api.resources.get_sbds_with_status
      parameters:
        - $ref: '#/components/parameters/user'
        - $ref: '#/components/parameters/MatchType'
        - $ref: '#/components/parameters/createdBefore'
        - $ref: '#/components/parameters/createdAfter'
        - $ref: '#/components/parameters/modifiedBefore'
        - $ref: '#/components/parameters/modifiedAfter'
        - $ref: '#/components/parameters/entity_id'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /sbds/{sbd_id}:
    parameters:
      - name: sbd_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
    get:
      summary: Get SBDefinition by identifier
      description: |
        Retrieves the SBDefinition with the given identifier from the
        underlying data store, if available
      operationId: ska_oso_ptt_services.rest.api.resources.get_sbd_with_status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        #                $ref: './oso-components-openapi-v1.yaml#/components/schemas/SBDefinition'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /status/history/sbds:
    get:
      summary: Get SBDefinition status history by the query parameter.
      description: |
        Retrieves the SBDefinitions status history which match the query parameters.
        Currently only two single query field is permitted, eg entity_id and version, 
        extra parameters passed to the request will be ignored.
        If version parameter is not passed then the api retrieves the SBDefinitions status history
        for the latest available SBDefinitions  version.Also requests without
        parameters will return an error rather than returning all objects.
      operationId: ska_oso_ptt_services.rest.api.resources.get_sbd_status_history
      parameters:
        - $ref: '#/components/parameters/entity_id'
        - $ref: '#/components/parameters/version'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /status/sbds/{sbd_id}:
    parameters:
      - name: sbd_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
    put:
      summary: Update SBDefinition status by identifier
      description: |
        Updates the SBDefinition status with the given identifier
        in the underlying data store, creating a new version.
        If the identifier does not exist in the data store, a not found error will be returned.
      operationId: ska_oso_ptt_services.rest.api.resources.put_sbd_history
      parameters:
        - $ref: '#/components/parameters/version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './sbd-status-openapi-v1.yaml#/SBDStatusHistory'
        required: true
      responses:
        "200":
          description: OK, the SBDefinition Status was created or updated
          content:
            application/json:
              schema:
                $ref: './sbd-status-openapi-v1.yaml#/SBDStatusHistory'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Get SBDefinition by identifier
      description: |
        Retrieves the SBDefinition status with the given identifier from the underlying data store, if available
      operationId: ska_oso_ptt_services.rest.api.resources.get_sbd_status
      parameters:
        - $ref: '#/components/parameters/version'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /status/sbis/{sbi_id}:
    parameters:
      - name: sbi_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
    put:
      summary: Update SBInstance status by identifier
      description: |
        Updates the SBInstance status with the given identifier
        in the underlying data store, mutating the existing first version.
        If the identifier does not exist in the data store, a not found error will be returned.
      operationId: ska_oso_ptt_services.rest.api.resources.put_sbi_history
      parameters:
        - $ref: '#/components/parameters/version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './sbi-status-openapi-v1.yaml#/SBIStatusHistory'
        required: true
      responses:
        "200":
          description: OK, the SBInstance Status was created or updated
          content:
            application/json:
              schema:
                $ref: './sbi-status-openapi-v1.yaml#/SBIStatusHistory'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: '#/components/responses/UnprocessableEntity'
        "500":
          $ref: '#/components/responses/InternalServerError'


components:
  parameters:
    user:
      in: query
      name: user
      schema:
        type: string
      required: false
    MatchType:
      in: query
      name: match_type
      schema:
        type: string
        enum: [ equals, starts_with, contains ]
        default: equals
      required: false
    createdBefore:
      in: query
      name: created_before
      schema:
        type: string
      required: false
      example: 2022-03-28T15:43:53.971548+00:00
    createdAfter:
      in: query
      name: created_after
      schema:
        type: string
      required: false
      example: 2022-03-28T15:43:53.971548+00:00
    modifiedBefore:
      in: query
      name: last_modified_before
      schema:
        type: string
      required: false
      example: 2022-03-28T15:43:53.971548+00:00
    modifiedAfter:
      in: query
      name: last_modified_after
      schema:
        type: string
      required: false
      example: 2022-03-28T15:43:53.971548+00:00
    entity_id:
      in: query
      name: entity_id
      schema:
        type: string
      required: false
    version:
      in: query
      name: version
      schema:
        type: integer
      required: false
      example: 1
  
  responses:
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad Request, eg validation of against OpenAPI spec failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    UnprocessableEntity:
      description: Unprocessable Entity, semantic error in request eg mismatched IDs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    BadRequestResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
    ErrorResponse:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        traceback:
          type: object
          properties:
            key:
              type: string
            type:
              type: string
            full_traceback:
              type: string
