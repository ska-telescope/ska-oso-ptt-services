$defs:
  Beam:
    description: Class that defines an SDP Beam configuration.
    properties:
      beam_id:
        title: Beam Id
        type: string
      function:
        $ref: '#/$defs/BeamFunction'
      search_beam_id:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Search Beam Id
      timing_beam_id:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Timing Beam Id
      vlbi_beam_id:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Vlbi Beam Id
    required:
    - beam_id
    - function
    title: Beam
    type: object
  BeamFunction:
    description: Enumeration of possible functions for an SDP Beam.
    enum:
    - visibilities
    - pulsar search
    - pulsar timing
    - vlbi
    - transient buffer
    title: BeamFunction
    type: string
  BeamMapping:
    description: Class to hold mapping of beam parameters to scans
    properties:
      beam_ref:
        title: Beam Ref
        type: string
      field_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Field Ref
      channels_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Channels Ref
      polarisations_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Polarisations Ref
    required:
    - beam_ref
    title: BeamMapping
    type: object
  CBFConfiguration:
    description: 'Class to hold all FSP and VLBI configurations.


      :param fsps: List of the FSP configurations to set

      :param vlbi: the VLBI configuration to set (optional)'
    properties:
      fsps:
        items:
          $ref: '#/$defs/FSPConfiguration'
        title: Fsps
        type: array
      vlbi:
        anyOf:
        - $ref: '#/$defs/VLBIConfiguration'
        - type: 'null'
        default: null
    title: CBFConfiguration
    type: object
  CSPConfiguration:
    description: 'Class to hold all CSP configuration.


      :param config_id: an ID for CSP configuration

      :param subarray_config: Sub-array configuration to set

      :param common_config: the common CSP elements to set

      :param cbf_config: the CBF configurations to set

      :param lowcbf_config: the LowCBF configurations to set

      :param pst_config: the PST configurations to set

      :param pss_config: the PSS configurations to set'
    properties:
      config_id:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Config Id
      subarray:
        anyOf:
        - $ref: '#/$defs/SubarrayConfiguration'
        - type: 'null'
        default: null
      common:
        anyOf:
        - $ref: '#/$defs/CommonConfiguration'
        - type: 'null'
        default: null
      cbf:
        anyOf:
        - $ref: '#/$defs/CBFConfiguration'
        - type: 'null'
        default: null
      lowcbf:
        anyOf:
        - $ref: '#/$defs/LowCBFConfiguration'
        - type: 'null'
        default: null
      pst:
        anyOf:
        - $ref: '#/$defs/PSTConfiguration'
        - type: 'null'
        default: null
      pss:
        anyOf:
        - $ref: '#/$defs/PSSConfiguration'
        - type: 'null'
        default: null
    title: CSPConfiguration
    type: object
  Channels:
    description: Class to hold Channel configuration
    properties:
      channels_id:
        title: Channels Id
        type: string
      spectral_windows:
        items:
          $ref: '#/$defs/SpectralWindow'
        title: Spectral Windows
        type: array
    required:
    - channels_id
    - spectral_windows
    title: Channels
    type: object
  CommonConfiguration:
    description: 'Class to hold the CSP sub-elements.


      :param subarray_id: an ID of sub-array device (optional)

      :param band_5_tuning: list of integer (optional)'
    properties:
      subarray_id:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Subarray Id
      band_5_tuning:
        items:
          type: number
        title: Band 5 Tuning
        type: array
    title: CommonConfiguration
    type: object
  CrossScanParameters:
    description: 'CrossScanParameters defines the properties of an observing pattern
      that

      uses a cross scan observing pattern, typically used for pointing

      calibrations.'
    properties:
      kind:
        const: CrossScanParameters
        default: CrossScanParameters
        enum:
        - CrossScanParameters
        title: Kind
        type: string
      offset_arcsec:
        default: 0.0
        title: Offset Arcsec
        type: number
    title: CrossScanParameters
    type: object
  DishAllocation:
    description: "DishAllocation represents the DISH allocation part of an\nAssignResources\
      \ request and response.\n\n:param receptor_ids: (optional) IDs of the receptors\
      \ to add to this\n    allocation"
    properties:
      receptor_ids:
        default: []
        items:
          type: string
        title: Receptor Ids
        type: array
        uniqueItems: true
    title: DishAllocation
    type: object
  DishConfiguration:
    description: 'DishConfiguration specifies how SKA MID dishes in a sub-array should
      be

      configured. At the moment, this is limited to setting the receiver band.'
    properties:
      dish_configuration_id:
        title: Dish Configuration Id
        type: string
      receiver_band:
        $ref: '#/$defs/ReceiverBand'
    required:
    - dish_configuration_id
    - receiver_band
    title: DishConfiguration
    type: object
  EquatorialCoordinates:
    description: SiderealTarget represents the argument for SKA scheduling block.
    properties:
      kind:
        const: equatorial
        default: equatorial
        enum:
        - equatorial
        title: Kind
        type: string
      ra:
        anyOf:
        - type: number
        - type: string
        default: 0.0
        title: Ra
      dec:
        anyOf:
        - type: number
        - type: string
        default: 0.0
        title: Dec
      reference_frame:
        allOf:
        - $ref: '#/$defs/EquatorialCoordinatesReferenceFrame'
        default: icrs
      unit:
        anyOf:
        - type: string
        - items:
            type: string
          type: array
        - maxItems: 2
          minItems: 2
          prefixItems:
          - type: string
          - type: string
          type: array
        default:
        - hourangle
        - deg
        title: Unit
    title: EquatorialCoordinates
    type: object
  EquatorialCoordinatesReferenceFrame:
    description: Enumeration of reference frames supported by an EquatorialCoordinates
    enum:
    - icrs
    - fk5
    title: EquatorialCoordinatesReferenceFrame
    type: string
  ExecutionBlock:
    description: 'ExecutionBlock captures the Execution Block resources and pipeline
      configuration

      required to process an execution block.


      :param eb_id: execution block ID

      :param max_length: maximum length

      :param context: context

      :param beams: list of Beams

      :param scan_types: list of EB scan types

      :param channels: list of EB channels

      :param polarisations: list of polarisations'
    properties:
      eb_id:
        title: Eb Id
        type: string
      max_length:
        title: Max Length
        type: number
      context:
        title: Context
        type: object
      beams:
        items:
          $ref: '#/$defs/Beam'
        title: Beams
        type: array
      scan_types:
        items:
          $ref: '#/$defs/ScanType'
        title: Scan Types
        type: array
      channels:
        items:
          $ref: '#/$defs/Channels'
        title: Channels
        type: array
      polarisations:
        items:
          $ref: '#/$defs/Polarisation'
        title: Polarisations
        type: array
    required:
    - eb_id
    - max_length
    - beams
    - scan_types
    - channels
    - polarisations
    title: ExecutionBlock
    type: object
  FSPConfiguration:
    description: 'FSPConfiguration defines the configuration for a CSP Frequency Slice

      Processor.


      Channel averaging map is an optional list of 20 x (int,int) tuples.


      :param fsp_id: FSP configuration ID [1..27]

      :param function_mode: FSP function mode

      :param frequency_slice_id: frequency slicer ID [1..26]

      :param zoom_factor: zoom factor [0..6]

      :param integration_factor: integer multiple of correlation integration time
      (140ms) [1..10]

      :param channel_averaging_map: Optional channel averaging map

      :param output_link_map: Optional output_link_map

      :param channel_offset: Optional channel offset value in integer

      :param zoom_window_tuning: Optional zoom window tuning value in integer'
    properties:
      fsp_id:
        maximum: 27
        minimum: 1
        title: Fsp Id
        type: integer
      function_mode:
        $ref: '#/$defs/FSPFunctionMode'
      frequency_slice_id:
        maximum: 26
        minimum: 1
        title: Frequency Slice Id
        type: integer
      integration_factor:
        maximum: 10
        minimum: 1
        title: Integration Factor
        type: integer
      zoom_factor:
        maximum: 6
        minimum: 0
        title: Zoom Factor
        type: integer
      channel_averaging_map:
        items:
          maxItems: 2
          minItems: 2
          prefixItems:
          - type: integer
          - type: integer
          type: array
        maxItems: 20
        title: Channel Averaging Map
        type: array
      output_link_map:
        items:
          items: {}
          type: array
        title: Output Link Map
        type: array
      channel_offset:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Channel Offset
      zoom_window_tuning:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Zoom Window Tuning
    required:
    - fsp_id
    - function_mode
    - frequency_slice_id
    - integration_factor
    - zoom_factor
    title: FSPConfiguration
    type: object
  FSPFunctionMode:
    description: FSPFunctionMode is an enumeration of the available FSP modes.
    enum:
    - CORR
    - PSS-BF
    - PST-BF
    - VLBI
    title: FSPFunctionMode
    type: string
  FilesystemScript:
    description: Represents an FilesystemScript to be run as an activity in an SKA
      scheduling block.
    properties:
      function_args:
        additionalProperties:
          $ref: '#/$defs/PythonArguments'
        title: Function Args
        type: object
      kind:
        const: filesystem
        default: filesystem
        enum:
        - filesystem
        title: Kind
        type: string
      path:
        title: Path
        type: string
    required:
    - path
    title: FilesystemScript
    type: object
  FivePointParameters:
    description: 'FivePointParameters defines the properties of an observing pattern
      that

      uses a five-point observing pattern centred on a reference position.'
    properties:
      kind:
        const: FivePointParameters
        default: FivePointParameters
        enum:
        - FivePointParameters
        title: Kind
        type: string
      offset_arcsec:
        default: 0.0
        title: Offset Arcsec
        type: number
    title: FivePointParameters
    type: object
  GitScript:
    description: Represents an GitScript to be run as an activity in an SKA scheduling
      block.
    properties:
      function_args:
        additionalProperties:
          $ref: '#/$defs/PythonArguments'
        title: Function Args
        type: object
      kind:
        const: git
        default: git
        enum:
        - git
        title: Kind
        type: string
      repo:
        title: Repo
        type: string
      path:
        title: Path
        type: string
      branch:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Branch
      commit:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Commit
    required:
    - repo
    - path
    title: GitScript
    type: object
  HorizontalCoordinates:
    description: DriftScanTarget defines AltAz target for SKA scheduling block.
    properties:
      kind:
        const: horizontal
        default: horizontal
        enum:
        - horizontal
        title: Kind
        type: string
      az:
        title: Az
        type: number
      el:
        title: El
        type: number
      unit:
        anyOf:
        - type: string
        - items:
            type: string
          type: array
        - maxItems: 2
          minItems: 2
          prefixItems:
          - type: string
          - type: string
          type: array
        default:
        - deg
        - deg
        title: Unit
      reference_frame:
        allOf:
        - $ref: '#/$defs/HorizontalCoordinatesReferenceFrame'
        default: altaz
    required:
    - az
    - el
    title: HorizontalCoordinates
    type: object
  HorizontalCoordinatesReferenceFrame:
    const: altaz
    description: Enumeration of reference frames supported by a HorizontalCoordinates.
    enum:
    - altaz
    title: HorizontalCoordinatesReferenceFrame
    type: string
  InlineScript:
    description: Represents an InlineScript to be ran as an activity in an SKA scheduling
      block.
    properties:
      function_args:
        additionalProperties:
          $ref: '#/$defs/PythonArguments'
        title: Function Args
        type: object
      kind:
        const: inline
        default: inline
        enum:
        - inline
        title: Kind
        type: string
      content:
        title: Content
        type: string
    required:
    - content
    title: InlineScript
    type: object
  LowCBFConfiguration:
    description: 'Class to hold the LOW CBF configuration specification.


      :param stations: Subarray Stations and station beam descriptions

      :param vis: Visibility output descriptions'
    properties:
      stations:
        $ref: '#/$defs/StationConfiguration'
      vis:
        $ref: '#/$defs/VisConfiguration'
    required:
    - stations
    - vis
    title: LowCBFConfiguration
    type: object
  MCCSAllocation:
    description: 'MCCSAllocation is a Python representation of the MCCS allocation
      segment

      of a scheduling block.


      :param station_ids: stations id''s to allocate

      :param channel_blocks: number of channel groups to assign

      :param subarray_beam_ids: beam IDs'
    properties:
      station_ids:
        items:
          items:
            type: integer
          type: array
        title: Station Ids
        type: array
      channel_blocks:
        items:
          type: integer
        title: Channel Blocks
        type: array
      subarray_beam_ids:
        items:
          type: string
        title: Subarray Beam Ids
        type: array
    required:
    - station_ids
    - channel_blocks
    - subarray_beam_ids
    title: MCCSAllocation
    type: object
  Metadata:
    description: Represents metadata about other entities.
    properties:
      version:
        default: 1
        title: Version
        type: integer
      created_by:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Created By
      created_on:
        format: date-time
        title: Created On
        type: string
      last_modified_by:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Last Modified By
      last_modified_on:
        format: date-time
        title: Last Modified On
        type: string
    title: Metadata
    type: object
  PSSConfiguration:
    description: Class to hold PSS configurations.
    properties: {}
    title: PSSConfiguration
    type: object
  PSTConfiguration:
    description: Class to hold PST configurations.
    properties: {}
    title: PSTConfiguration
    type: object
  PbDependency:
    description: Class to hold Dependencies for ProcessingBlock
    properties:
      pb_ref:
        title: Pb Ref
        type: string
      kind:
        items:
          type: string
        title: Kind
        type: array
    required:
    - pb_ref
    - kind
    title: PbDependency
    type: object
  PointingCorrection:
    description: 'Operation to apply to the pointing correction model.


      MAINTAIN: continue applying the current pointing correction model

      UPDATE: wait for (if necessary) and apply new pointing calibration solution

      RESET: reset the applied pointing correction to the pointing model defaults'
    enum:
    - MAINTAIN
    - UPDATE
    - RESET
    title: PointingCorrection
    type: string
  PointingKind:
    enum:
    - FivePointParameters
    - SinglePointParameters
    - CrossScanParameters
    - RasterParameters
    - StarRasterParameters
    title: PointingKind
    type: string
  PointingPattern:
    description: 'PointingPattern holds the user-configured pointing patterns and
      current active

      pattern for receptor pointing patterns associated with a target.


      One of each pointing pattern type can be held in the parameters list. Only the

      active pattern will be used for observing; the remainder provide an easy way
      to

      recover previously edited observing parameters for the target.'
    properties:
      active:
        allOf:
        - $ref: '#/$defs/PointingKind'
        default: SinglePointParameters
      parameters:
        items:
          discriminator:
            mapping:
              CrossScanParameters: '#/$defs/CrossScanParameters'
              FivePointParameters: '#/$defs/FivePointParameters'
              RasterParameters: '#/$defs/RasterParameters'
              SinglePointParameters: '#/$defs/SinglePointParameters'
              StarRasterParameters: '#/$defs/StarRasterParameters'
            propertyName: kind
          oneOf:
          - $ref: '#/$defs/FivePointParameters'
          - $ref: '#/$defs/CrossScanParameters'
          - $ref: '#/$defs/SinglePointParameters'
          - $ref: '#/$defs/RasterParameters'
          - $ref: '#/$defs/StarRasterParameters'
        minItems: 1
        title: Parameters
        type: array
    title: PointingPattern
    type: object
  Polarisation:
    description: Class that defines an SDP Polarisation configuration
    properties:
      polarisations_id:
        title: Polarisations Id
        type: string
      corr_type:
        items:
          type: string
        title: Corr Type
        type: array
    required:
    - polarisations_id
    - corr_type
    title: Polarisation
    type: object
  ProcessingBlock:
    description: Class to hold ProcessingBlock configuration
    properties:
      pb_id:
        title: Pb Id
        type: string
      script:
        $ref: '#/$defs/Script'
      sbi_refs:
        items:
          type: string
        title: Sbi Refs
        type: array
      parameters:
        title: Parameters
        type: object
      dependencies:
        items:
          $ref: '#/$defs/PbDependency'
        title: Dependencies
        type: array
    required:
    - pb_id
    - script
    title: ProcessingBlock
    type: object
  PythonArguments:
    description: Represents the arguments for a Python callable.
    properties:
      args:
        items: {}
        title: Args
        type: array
      kwargs:
        title: Kwargs
        type: object
    title: PythonArguments
    type: object
  RadialVelocity:
    description: 'Radial velocity measures the line-of-sight velocity of an astronomical

      source.


      In principle, the radial velocity can be converted to and from the target

      redshift. However, these values are persisted separately to give the user

      the option of inputting either value.


      A velocity must also define the reference frame and definition that are

      applicable to the velocity. By default, these have values of:


      - definition = RADIO

      - reference_frame = LSRK

      - redshift = 0.0'
    properties:
      quantity:
        $ref: '#/$defs/RadialVelocityQuantity'
      definition:
        allOf:
        - $ref: '#/$defs/RadialVelocityDefinition'
        default: RADIO
      reference_frame:
        allOf:
        - $ref: '#/$defs/RadialVelocityReferenceFrame'
        default: LSRK
      redshift:
        default: 0.0
        title: Redshift
        type: number
    title: RadialVelocity
    type: object
  RadialVelocityDefinition:
    description: "Enumeration of reference definitions supported by a RadialVelocity.\n\
      \nThe sky frequency (\u03BD) at which we must observe a spectral line is derived\n\
      from the rest frequency of the spectral line (\u03BD\u2080), the line-of-sight\n\
      velocity of the source (V), and the speed of light (c). The relativistic\nvelocity,\
      \ or true line-of-sight velocity, is related to the observed and\nrest frequencies\
      \ by\n\n    V= c * (\u03BD\u2080\xB2\u2212 \u03BD\xB2) / (v\u2080\xB2 + v\xB2\
      )\n\nThis equation is a bit cumbersome to use; in astronomy two different\n\
      approximations are typically used:\n\nOptical Velocity:\n\n    Voptical = c\
      \ * (\u03BB \u2212 \u03BB\u2080) / \u03BB\u2080 = cz\n\n(z is the redshift of\
      \ the source; \u03BB and \u03BB\u2080 are the corresponding observed\nand rest\
      \ wavelengths, respectively)\n\nRadio Velocity:\n\n    Vradio = c * (\u03BD\u2080\
      \ \u2212 \u03BD) / v\u2080 = c * (\u03BB\u2212\u03BB\u2080) / \u03BB\n\nThe\
      \ radio and optical velocities are not identical. Particularly, Voptical\nand\
      \ Vradio diverge for large velocities. Optical velocities are commonly\nused\
      \ for (Helio/Barycentric) extragalactic observations; (LSRK) radio\nvelocities\
      \ are typical for Galactic observations.\n\nTaken from https://science.nrao.edu/facilities/vla/docs/manuals/obsguide/modes/line"
    enum:
    - OPTICAL
    - RADIO
    - RELATIVISTIC
    title: RadialVelocityDefinition
    type: string
  RadialVelocityQuantity:
    properties:
      value:
        title: Value
        type: number
      unit:
        enum:
        - m / s
        - km / s
        title: Unit
        type: string
    required:
    - value
    title: RadialVelocityQuantity
    type: object
  RadialVelocityReferenceFrame:
    description: "Reference frame in which the radial velocity is defined.\n\nThe\
      \ Earth rotates, revolves around the Sun, rotates around the Galaxy,\nmoves\
      \ within the Local Group, and shows motion against the Cosmic\nMicrowave Background.\
      \ As for the convention above, any source velocity\nmust therefore also always\
      \ be specified relative to a reference frame.\n\nVarious velocity rest frames\
      \ are used in the literature. The following\ntable lists their name, the motion\
      \ that is corrected for, and the maximum\namplitude of the velocity correction.\
      \ Each rest frame correction is\nincremental to the preceding row:\n\nVelocity\
      \                     Rest Frame                              Correct for +\
      \ max correction (km/s)\n===========================  ======================================\
      \  ======================================\nTopocentric                  Telescope\
      \                                   Nothing (0)\nGeocentric                \
      \   Earth Center                            Earth rotation (0.5)\nEarth-Moon\
      \ Barycentric       Earth+Moon center of mass               Motion around Earth+Moon\
      \ center of mass (0.013)\nHeliocentric                 Center of the Sun   \
      \                        Earth orbital motion (30)\nBarycentric            \
      \      Earth+Sun center of mass                    Earth+Sun center of mass\
      \ (0.012)\nLocal Standard of Rest           Center of Mass of local stars  \
      \             Solar motion relative to nearby stars (20)\nGalactocentric   \
      \            Center of Milky Way                     Milky Way Rotation (230)\n\
      Local Group Barycentric      Local Group center of mass              Milky Way\
      \ Motion (100)\nVirgocentric                     Center of the Local Virgo supercluster\
      \  Local Group motion (300)\nCosmic Microwave Background  CMB              \
      \                       Local Supercluster Motion (600)\n\nThe velocity frame\
      \ should be chosen based on the science. For most\nobservations, however, one\
      \ of the following three reference frames is\ncommonly used:\n\n- Topocentric\
      \ is the reference frame of the observatory (defining the sky\n  frequency of\
      \ the observations). Visibilities in a measurement set are\n  typically stored\
      \ in this frame.\n\n- Local Standard of Rest is the native output of images\
      \ in CASA. Note that\n  there are two varieties of LSR: the kinematic LSR (LSRK)\
      \ and the dynamic\n  (LSRD) definitions for the kinematic and dynamic centers,\
      \ respectively.\n  In almost all cases LSRK is being used and the less precise\
      \ name LSR is\n  usually used synonymously with the more modern LSRK definition.\n\
      \n- Barycentric is a commonly used frame that has virtually replaced the\n \
      \ older Heliocentric standard. Given the small difference between the\n  Barycentric\
      \ and Heliocentric frames, they are frequently used\n  interchangeably.\n\n\
      Taken from https://science.nrao.edu/facilities/vla/docs/manuals/obsguide/modes/line"
    enum:
    - TOPOCENTRIC
    - LSRK
    - BARYCENTRIC
    title: RadialVelocityReferenceFrame
    type: string
  RasterParameters:
    description: 'RasterParameters defines the properties of an observing pattern
      that

      uses a raster pattern centred on a reference position.'
    properties:
      kind:
        const: RasterParameters
        default: RasterParameters
        enum:
        - RasterParameters
        title: Kind
        type: string
      row_length_arcsec:
        default: 0.0
        title: Row Length Arcsec
        type: number
      row_offset_arcsec:
        default: 0.0
        title: Row Offset Arcsec
        type: number
      n_rows:
        default: 1
        title: N Rows
        type: integer
      pa:
        default: 0.0
        title: Pa
        type: number
      unidirectional:
        default: false
        title: Unidirectional
        type: boolean
    title: RasterParameters
    type: object
  ReceiverBand:
    description: ReceiverBand is an enumeration of SKA MID receiver bands.
    enum:
    - '1'
    - '2'
    - 5a
    - 5b
    title: ReceiverBand
    type: string
  Resources:
    description: Class to hold SDP Resources
    properties:
      csp_links:
        items:
          type: integer
        title: Csp Links
        type: array
      receptors:
        items:
          type: string
        title: Receptors
        type: array
      receive_nodes:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Receive Nodes
    title: Resources
    type: object
  SDPConfiguration:
    description: 'SDPConfiguration captures the SDP resources and pipeline configuration

      required to process an execution block.


      :param execution_block: the SDP ExecutionBlock object

      :param resources: external resources

      :param processing_blocks: list of SDP ProcessingBlock objects'
    properties:
      execution_block:
        anyOf:
        - $ref: '#/$defs/ExecutionBlock'
        - type: 'null'
        default: null
      resources:
        anyOf:
        - $ref: '#/$defs/Resources'
        - type: 'null'
        default: null
      processing_blocks:
        items:
          $ref: '#/$defs/ProcessingBlock'
        title: Processing Blocks
        type: array
    title: SDPConfiguration
    type: object
  ScanDefinition:
    description: 'ScanDefinition represents the instrument configuration for a single
      scan.


      :param scan_definition_id: the unique ID for this scan definition

      :param scan_duration_ms: scan duration

      :target_ref: ID of target to observe

      :target_beam_configuration_refs: SKA LOW sub-array beam configurations to apply
      during this scan.

      :dish_configuration_ref: SKA MID dish configuration ID during this scan.

      :scan_type_ref: SKA MID scan type ID

      :csp_configuration_ref: SKA MID  Central Signal Processor ID

      :pointing_correction: operation to apply to the pointing correction model.'
    properties:
      scan_definition_id:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Scan Definition Id
      scan_duration_ms:
        format: duration
        title: Scan Duration
        type: string
      target_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Target Ref
      target_beam_configuration_refs:
        items:
          type: string
        title: Target Beam Configuration Refs
        type: array
      dish_configuration_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Dish Configuration Ref
      scan_type_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Scan Type Ref
      csp_configuration_ref:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Csp Configuration Ref
      pointing_correction:
        allOf:
        - $ref: '#/$defs/PointingCorrection'
        default: MAINTAIN
    required:
    - scan_duration_ms
    title: ScanDefinition
    type: object
  ScanType:
    description: Class to hold ScanType configuration
    properties:
      scan_type_id:
        title: Scan Type Id
        type: string
      derive_from:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        title: Derive From
      beams:
        items:
          $ref: '#/$defs/BeamMapping'
        title: Beams
        type: array
    required:
    - scan_type_id
    title: ScanType
    type: object
  Script:
    description: Class to hold Script for ProcessingBlock
    properties:
      name:
        title: Name
        type: string
      kind:
        $ref: '#/$defs/ScriptKind'
      version:
        title: Version
        type: string
    required:
    - name
    - kind
    - version
    title: Script
    type: object
  ScriptKind:
    description: Enumeration class to hold the kind of processing script
    enum:
    - realtime
    - batch
    title: ScriptKind
    type: string
  SinglePointParameters:
    description: 'SinglePointParameters defines the properties for an observing pattern

      consisting of a single receptor pointing with an optional offset from

      the reference position.'
    properties:
      kind:
        const: SinglePointParameters
        default: SinglePointParameters
        enum:
        - SinglePointParameters
        title: Kind
        type: string
      offset_x_arcsec:
        default: 0.0
        title: Offset X Arcsec
        type: number
      offset_y_arcsec:
        default: 0.0
        title: Offset Y Arcsec
        type: number
    title: SinglePointParameters
    type: object
  SolarSystemObject:
    description: Planet represents the argument for SKA scheduling block.
    properties:
      kind:
        const: sso
        default: sso
        enum:
        - sso
        title: Kind
        type: string
      name:
        $ref: '#/$defs/SolarSystemObjectName'
    required:
    - name
    title: SolarSystemObject
    type: object
  SolarSystemObjectName:
    description: SolarSystemObjectName represents name of the solar system object.
    enum:
    - mercury
    - venus
    - mars
    title: SolarSystemObjectName
    type: string
  SpectralWindow:
    description: Class to hold Spectral Windows configuration
    properties:
      spectral_window_id:
        title: Spectral Window Id
        type: string
      count:
        title: Count
        type: integer
      start:
        title: Start
        type: integer
      freq_min:
        title: Freq Min
        type: number
      freq_max:
        title: Freq Max
        type: number
      stride:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        title: Stride
      link_map:
        items:
          items: {}
          type: array
        title: Link Map
        type: array
    required:
    - spectral_window_id
    - count
    - start
    - freq_min
    - freq_max
    title: SpectralWindow
    type: object
  StarRasterParameters:
    description: 'StarRasterParameters defines the properties of an observing pattern
      that

      uses a star raster pattern centred on a reference position.'
    properties:
      kind:
        const: StarRasterParameters
        default: StarRasterParameters
        enum:
        - StarRasterParameters
        title: Kind
        type: string
      row_length_arcsec:
        default: 0.0
        title: Row Length Arcsec
        type: number
      n_rows:
        default: 1
        title: N Rows
        type: integer
      row_offset_angle:
        default: 0.0
        title: Row Offset Angle
        type: number
      unidirectional:
        default: false
        title: Unidirectional
        type: boolean
    title: StarRasterParameters
    type: object
  StationBeamConfiguration:
    description: 'StationBeamConfiguration defines the LOW.CBF station beam description.


      :param stn_beam_id: Station beam ID

      :param freq_ids: list of station beam frequency IDs'
    properties:
      stn_beam_id:
        title: Stn Beam Id
        type: integer
      freq_ids:
        items:
          type: integer
        title: Freq Ids
        type: array
    required:
    - stn_beam_id
    - freq_ids
    title: StationBeamConfiguration
    type: object
  StationBeamHost:
    description: 'Class to hold the SDP channel & IP address for a station beam definition.


      :param sdp_channel: SDP channel ID.

      :param ip_addr: IP address of this channel'
    properties:
      sdp_channel:
        title: Sdp Channel
        type: integer
      ip_addr:
        title: Ip Addr
        type: string
    required:
    - sdp_channel
    - ip_addr
    title: StationBeamHost
    type: object
  StationBeamMac:
    description: 'Class to hold SDP channel & server MAC for station beam definitions.


      :param sdp_channel: SDP channel

      :param server_mac: server MAC'
    properties:
      sdp_channel:
        title: Sdp Channel
        type: integer
      server_mac:
        title: Server Mac
        type: string
    required:
    - sdp_channel
    - server_mac
    title: StationBeamMac
    type: object
  StationBeamPort:
    description: 'Class to hold SDP channel, UDP port and stride for station beam
      definitions.


      :param sdp_channel: SDP channel number

      :param udp_port: UDP port

      :param stride: stride'
    properties:
      sdp_channel:
        title: Sdp Channel
        type: integer
      udp_port:
        title: Udp Port
        type: integer
      stride:
        title: Stride
        type: integer
    required:
    - sdp_channel
    - udp_port
    - stride
    title: StationBeamPort
    type: object
  StationConfiguration:
    description: 'Class to hold LOW.CBF station configuration.


      :param stns: The subarray stations of this StationConfiguration.

      :param stn_beams: The station beam descriptions of this StationConfiguration.'
    properties:
      stns:
        items:
          items:
            type: integer
          type: array
        title: Stns
        type: array
      stn_beams:
        items:
          $ref: '#/$defs/StationBeamConfiguration'
        title: Stn Beams
        type: array
    required:
    - stns
    - stn_beams
    title: StationConfiguration
    type: object
  SubarrayBeamConfiguration:
    description: 'SubarrayBeamConfiguration specifies how SKA LOW sub-array should
      be

      configured.


      :param subarray_beam_configuration_id: ID for this configuration

      :param subarray_beam_id: ID of subarray beam this config maps to

      :param update_rate: rate of updates (in units of ???)

      :param antenna_weights:

      :param phase_centre:

      :param channels:'
    properties:
      subarray_beam_configuration_id:
        title: Subarray Beam Configuration Id
        type: string
      subarray_beam_id:
        title: Subarray Beam Id
        type: string
      update_rate:
        title: Update Rate
        type: number
      antenna_weights:
        items:
          type: number
        title: Antenna Weights
        type: array
      phase_centre:
        items:
          type: number
        title: Phase Centre
        type: array
      channels:
        items:
          items:
            type: integer
          type: array
        title: Channels
        type: array
    required:
    - subarray_beam_configuration_id
    - subarray_beam_id
    - update_rate
    - antenna_weights
    - phase_centre
    - channels
    title: SubarrayBeamConfiguration
    type: object
  SubarrayConfiguration:
    description: 'Class to hold the parameters relevant only for the current sub-array
      device.


      :param sub-array_name: Name of the sub-array'
    properties:
      subarray_name:
        title: Subarray Name
        type: string
    required:
    - subarray_name
    title: SubarrayConfiguration
    type: object
  Target:
    description: 'Target represents the receptor pointing for an SKA observation,
      consisting

      of a reference position and a pointing pattern to be used when observing

      the target.


      Default pointing patterns and equatorial coordinates will be set if not

      provided.'
    properties:
      target_id:
        default: ''
        title: Target Id
        type: string
      pointing_pattern:
        $ref: '#/$defs/PointingPattern'
      reference_coordinate:
        discriminator:
          mapping:
            equatorial: '#/$defs/EquatorialCoordinates'
            horizontal: '#/$defs/HorizontalCoordinates'
            sso: '#/$defs/SolarSystemObject'
          propertyName: kind
        oneOf:
        - $ref: '#/$defs/EquatorialCoordinates'
        - $ref: '#/$defs/SolarSystemObject'
        - $ref: '#/$defs/HorizontalCoordinates'
        title: Reference Coordinate
      radial_velocity:
        $ref: '#/$defs/RadialVelocity'
    title: Target
    type: object
  TargetBeamConfiguration:
    description: 'TargetBeamConfiguration specifies how SKA LOW subarray beam in a
      sub-array should be

      configured.


      :param target_beam_id: ID of target beam configuration

      :param target_ref: target beam configuration points at this target

      :param subarray_beam_configuration_ref: sub-array beam configuration'
    properties:
      target_beam_id:
        title: Target Beam Id
        type: string
      target_ref:
        title: Target Ref
        type: string
      subarray_beam_configuration_ref:
        title: Subarray Beam Configuration Ref
        type: string
    required:
    - target_beam_id
    - target_ref
    - subarray_beam_configuration_ref
    title: TargetBeamConfiguration
    type: object
  TelescopeType:
    enum:
    - ska_mid
    - ska_low
    - MeerKAT
    title: TelescopeType
    type: string
  VLBIConfiguration:
    description: Class to hold VLBI configurations.
    properties: {}
    title: VLBIConfiguration
    type: object
  VisConfiguration:
    description: 'Class to hold the Visibility Configuration.


      :param fsp: The VisFSPConfiguration of this VisConfiguration.

      :param stn_beams: The StationBeamConfiguration of this VisConfiguration.'
    properties:
      fsp:
        $ref: '#/$defs/VisFSPConfiguration'
      stn_beams:
        items:
          $ref: '#/$defs/VisStationBeamConfiguration'
        title: Stn Beams
        type: array
    required:
    - fsp
    - stn_beams
    title: VisConfiguration
    type: object
  VisFSPConfiguration:
    description: 'Class to hold the FSPs used for correlation.


      :param function_mode: Function mode name

      :param fsp_ids: List of integer FSP IDs'
    properties:
      function_mode:
        title: Function Mode
        type: string
      fsp_ids:
        items:
          type: integer
        title: Fsp Ids
        type: array
    required:
    - function_mode
    - fsp_ids
    title: VisFSPConfiguration
    type: object
  VisStationBeamConfiguration:
    description: 'VisStationBeamConfiguration defines LOW CBF station beams from which
      to

      calculate visibilities.


      :param stn_beam_id: station beam ID

      :param host: SDP channel and IP address

      :param port: SDP channel, UDP port, and stride

      :param mac: SDP channel and server MAC

      :param integration_ms: milliseconds integration'
    properties:
      stn_beam_id:
        title: Stn Beam Id
        type: integer
      integration_ms:
        format: duration
        title: Integration Ms
        type: string
      host:
        items:
          $ref: '#/$defs/StationBeamHost'
        title: Host
        type: array
      port:
        items:
          $ref: '#/$defs/StationBeamPort'
        title: Port
        type: array
      mac:
        anyOf:
        - items:
            $ref: '#/$defs/StationBeamMac'
          type: array
        - type: 'null'
        default: null
        title: Mac
    required:
    - stn_beam_id
    - integration_ms
    - host
    - port
    title: VisStationBeamConfiguration
    type: object
description: SKA scheduling block
properties:
  interface:
    anyOf:
    - type: string
    - type: 'null'
    default: https://schema.skao.int/ska-oso-pdm-sbd/0.1
    title: Interface
  sbd_id:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    title: Sbd Id
  name:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    title: Name
  description:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    title: Description
  telescope:
    anyOf:
    - $ref: '#/$defs/TelescopeType'
    - type: 'null'
    default: null
  status:
    - type: string
    title: Status
  metadata:
    anyOf:
    - $ref: '#/$defs/Metadata'
    - type: 'null'
    default: null
  prj_ref:
    anyOf:
    - type: string
    - type: 'null'
    default: null
    title: Prj Ref
  activities:
    anyOf:
    - additionalProperties:
        discriminator:
          mapping:
            filesystem: '#/$defs/FilesystemScript'
            git: '#/$defs/GitScript'
            inline: '#/$defs/InlineScript'
          propertyName: kind
        oneOf:
        - $ref: '#/$defs/InlineScript'
        - $ref: '#/$defs/FilesystemScript'
        - $ref: '#/$defs/GitScript'
      type: object
    - type: 'null'
    title: Activities
  targets:
    anyOf:
    - items:
        $ref: '#/$defs/Target'
      type: array
    - type: 'null'
    title: Targets
  scan_definitions:
    anyOf:
    - items:
        $ref: '#/$defs/ScanDefinition'
      type: array
    - type: 'null'
    title: Scan Definitions
  scan_sequence:
    anyOf:
    - items:
        type: string
      type: array
    - type: 'null'
    title: Scan Sequence
  sdp_configuration:
    anyOf:
    - $ref: '#/$defs/SDPConfiguration'
    - type: 'null'
    default: null
  dish_configurations:
    anyOf:
    - items:
        $ref: '#/$defs/DishConfiguration'
      type: array
    - type: 'null'
    title: Dish Configurations
  csp_configurations:
    anyOf:
    - items:
        $ref: '#/$defs/CSPConfiguration'
      type: array
    - type: 'null'
    title: Csp Configurations
  dish_allocations:
    anyOf:
    - $ref: '#/$defs/DishAllocation'
    - type: 'null'
    default: null
  mccs_allocation:
    anyOf:
    - $ref: '#/$defs/MCCSAllocation'
    - type: 'null'
    default: null
  subarray_beam_configurations:
    anyOf:
    - items:
        $ref: '#/$defs/SubarrayBeamConfiguration'
      type: array
    - type: 'null'
    title: Subarray Beam Configurations
  target_beam_configurations:
    anyOf:
    - items:
        $ref: '#/$defs/TargetBeamConfiguration'
      type: array
    - type: 'null'
    title: Target Beam Configurations
title: SBDefinition
type: object
